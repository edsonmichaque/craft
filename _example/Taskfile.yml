# Taskfile.yml
version: '3'

vars:
  CI_SCRIPTS: ./scripts/ci

env:
  PROJECT_ROOT: '{{.ROOT}}'

tasks:
  default:
    cmds:
      - task: test
      - task: build

  test:
    desc: Run tests
    cmds:
      - '{{.CI_SCRIPTS}}/test {{.CLI_ARGS}}'
    sources:
      - 'pkg/**/*.go'
      - 'cmd/**/*.go'
    generates:
      - coverage/coverage.out

  test:watch:
    desc: Run tests in watch mode
    cmds:
      - '{{.CI_SCRIPTS}}/test --watch {{.CLI_ARGS}}'

  test:coverage:
    desc: Run tests with coverage
    cmds:
      - '{{.CI_SCRIPTS}}/test coverage {{.CLI_ARGS}}'

  build:
    desc: Build project
    cmds:
      - '{{.CI_SCRIPTS}}/build {{.CLI_ARGS}}'
    sources:
      - 'pkg/**/*.go'
      - 'cmd/**/*.go'
    generates:
      - bin/{{.PROJECT_NAME}}

  build:debug:
    desc: Build with debug info
    env:
      DEBUG: "1"
    cmds:
      - task: build

  docker:
    desc: Build Docker images
    cmds:
      - '{{.CI_SCRIPTS}}/build docker {{.CLI_ARGS}}'

  package:
    desc: Create distribution packages
    deps: [build]
    cmds:
      - '{{.CI_SCRIPTS}}/build package {{.CLI_ARGS}}'

  ci:
    desc: Run full CI pipeline
    cmds:
      - '{{.CI_SCRIPTS}}/ci {{.CLI_ARGS}}'

  setup-dev:
    desc: Setup development environment
    cmds:
      - '{{.CI_SCRIPTS}}/setup-dev.sh'

  lint:
    desc: Run linters
    cmds:
      - '{{.CI_SCRIPTS}}/test lint {{.CLI_ARGS}}'

  generate:
    desc: Generate code
    cmds:
      - '{{.CI_SCRIPTS}}/tasks/generate.sh {{.CLI_ARGS}}'

  ci:test:
    desc: Test CI configurations
    cmds:
      - '{{.CI_SCRIPTS}}/utils/ci-tester.sh {{.CLI_ARGS}}'

  ci:test:github:
    desc: Test GitHub Actions
    cmds:
      - '{{.CI_SCRIPTS}}/utils/ci-tester.sh github {{.CLI_ARGS}}'

  ci:test:gitlab:
    desc: Test GitLab CI
    cmds:
      - '{{.CI_SCRIPTS}}/utils/ci-tester.sh gitlab {{.CLI_ARGS}}'

  db:
    desc: Database operations
    cmds:
      - '{{.CI_SCRIPTS}}/utils/db.sh {{.CLI_ARGS}}'

  release:
    desc: Create a release
    cmds:
      - '{{.CI_SCRIPTS}}/tasks/release.sh {{.CLI_ARGS}}'

  clean:
    desc: Clean build artifacts
    cmds:
      - '{{.CI_SCRIPTS}}/utils/cleanup.sh {{.CLI_ARGS}}'
